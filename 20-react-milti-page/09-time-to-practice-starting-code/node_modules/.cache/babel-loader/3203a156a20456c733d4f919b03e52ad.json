{"ast":null,"code":"import{useEffect}from\"react\";import{useHistory}from\"react-router\";import QuoteForm from\"../components/quotes/QuoteForm\";import useHttp from\"../hooks/use-http\";import{addQuote}from\"../lib/api\";import{jsx as _jsx}from\"react/jsx-runtime\";var NewQuote=function NewQuote(){var _useHttp=useHttp(addQuote),sendRequest=_useHttp.sendRequest,status=_useHttp.status;var history=useHistory();useEffect(function(){if(status===\"completed\"){history.push(\"/quotes\");}},[status,history]);var addQuoteHandler=function addQuoteHandler(quoteData){sendRequest(quoteData);};return/*#__PURE__*/_jsx(QuoteForm,{isLoading:status===\"pending\",onAddQuote:addQuoteHandler});};export default NewQuote;","map":{"version":3,"sources":["/home/tomzor/code/TomVisTor/react/react-complete-guide-code/20-react-milti-page/09-time-to-practice-starting-code/src/pages/NewQuote.js"],"names":["useEffect","useHistory","QuoteForm","useHttp","addQuote","NewQuote","sendRequest","status","history","push","addQuoteHandler","quoteData"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,UAAT,KAA2B,cAA3B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,gCAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,YAAzB,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,aAAgCF,OAAO,CAACC,QAAD,CAAvC,CAAQE,WAAR,UAAQA,WAAR,CAAqBC,MAArB,UAAqBA,MAArB,CACA,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAIO,MAAM,GAAK,WAAf,CAA4B,CAC1BC,OAAO,CAACC,IAAR,CAAa,SAAb,EACD,CACF,CAJQ,CAIN,CAACF,MAAD,CAASC,OAAT,CAJM,CAAT,CAMA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAe,CACrCL,WAAW,CAACK,SAAD,CAAX,CACD,CAFD,CAIA,mBACE,KAAC,SAAD,EACE,SAAS,CAAEJ,MAAM,GAAK,SADxB,CAEE,UAAU,CAAEG,eAFd,EADF,CAMD,CApBD,CAsBA,cAAeL,CAAAA,QAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return (\n    <QuoteForm\n      isLoading={status === \"pending\"}\n      onAddQuote={addQuoteHandler}\n    ></QuoteForm>\n  );\n};\n\nexport default NewQuote;\n"]},"metadata":{},"sourceType":"module"}