{"ast":null,"code":"var _jsxFileName = \"/home/tomzor/code/TomVisTor/react/react-complete-guide-code/03-react-basics-working-with-components/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [selected, setSelected] = useState(\"2021\");\n\n  const onChangeFilterHandler = event => {\n    setSelected(event);\n  };\n\n  const expensesFilter = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selected;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (expensesFilter.length > 0) {\n    expensesContent = expensesFilter.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        value: selected,\n        onChangeFilter: onChangeFilterHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"txpGtyV+A5gHCFbamBXZaGHBKmY=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/home/tomzor/code/TomVisTor/react/react-complete-guide-code/03-react-basics-working-with-components/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","ExpensesFilter","ExpensesList","Card","Expenses","props","selected","setSelected","onChangeFilterHandler","event","expensesFilter","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,MAAD,CAAxC;;AAEA,QAAMS,qBAAqB,GAAIC,KAAD,IAAW;AACvCF,IAAAA,WAAW,CAACE,KAAD,CAAX;AACD,GAFD;;AAGA,QAAMC,cAAc,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,QAAjD;AACD,GAFsB,CAAvB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,cAAc,CAACQ,MAAf,GAAwB,CAA5B,EAA+B;AAC7BD,IAAAA,eAAe,GAAGP,cAAc,CAACS,GAAf,CAAoBN,OAAD,iBACnC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,KAAK,EAAEhB,QADT;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGS,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCD;;GAAMb,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\n\nconst Expenses = (props) => {\n  const [selected, setSelected] = useState(\"2021\");\n\n  const onChangeFilterHandler = (event) => {\n    setSelected(event);\n  };\n  const expensesFilter = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === selected;\n  });\n\n  let expensesContent = <p>No expenses found.</p>;\n\n  if (expensesFilter.length > 0) {\n    expensesContent = expensesFilter.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      ></ExpenseItem>\n    ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          value={selected}\n          onChangeFilter={onChangeFilterHandler}\n        />\n        {expensesContent}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}